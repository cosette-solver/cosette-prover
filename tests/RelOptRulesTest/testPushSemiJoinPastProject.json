{
  "schemas" : [ {
    "name" : "EMP",
    "fields" : [ "EMPNO", "ENAME", "JOB", "MGR", "HIREDATE", "SAL", "COMM", "DEPTNO", "SLACKER" ],
    "types" : [ "INTEGER", "VARCHAR", "VARCHAR", "INTEGER", "TIMESTAMP", "INTEGER", "INTEGER", "INTEGER", "BOOLEAN" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "DEFAULT", "NOT_NULLABLE" ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ]
  }, {
    "name" : "DEPT",
    "fields" : [ "DEPTNO", "NAME" ],
    "types" : [ "INTEGER", "VARCHAR" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE" ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ]
  } ],
  "queries" : [ {
    "project" : {
      "target" : [ {
        "column" : 0,
        "type" : "VARCHAR"
      }, {
        "column" : 1,
        "type" : "VARCHAR"
      }, {
        "column" : 2,
        "type" : "INTEGER"
      }, {
        "column" : 3,
        "type" : "INTEGER"
      } ],
      "source" : {
        "filter" : {
          "condition" : {
            "operator" : "=",
            "operand" : [ {
              "column" : 3,
              "type" : "INTEGER"
            }, {
              "column" : 4,
              "type" : "INTEGER"
            } ],
            "type" : "BOOLEAN"
          },
          "source" : {
            "join" : {
              "kind" : "INNER",
              "condition" : {
                "operator" : "true",
                "operand" : [ ],
                "type" : "BOOLEAN"
              },
              "left" : {
                "project" : {
                  "target" : [ {
                    "column" : 1,
                    "type" : "VARCHAR"
                  }, {
                    "operator" : "TRIM",
                    "operand" : [ {
                      "operator" : "BOTH",
                      "operand" : [ ],
                      "type" : "SYMBOL"
                    }, {
                      "operator" : "_ISO-8859-1' '",
                      "operand" : [ ],
                      "type" : "CHAR"
                    }, {
                      "column" : 2,
                      "type" : "VARCHAR"
                    } ],
                    "type" : "VARCHAR"
                  }, {
                    "operator" : "*",
                    "operand" : [ {
                      "column" : 5,
                      "type" : "INTEGER"
                    }, {
                      "operator" : "2",
                      "operand" : [ ],
                      "type" : "INTEGER"
                    } ],
                    "type" : "INTEGER"
                  }, {
                    "column" : 7,
                    "type" : "INTEGER"
                  } ],
                  "source" : {
                    "scan" : 0
                  }
                }
              },
              "right" : {
                "scan" : 1
              }
            }
          }
        }
      }
    }
  }, {
    "project" : {
      "target" : [ {
        "column" : 0,
        "type" : "VARCHAR"
      }, {
        "column" : 1,
        "type" : "VARCHAR"
      }, {
        "column" : 2,
        "type" : "INTEGER"
      }, {
        "column" : 3,
        "type" : "INTEGER"
      } ],
      "source" : {
        "join" : {
          "kind" : "INNER",
          "condition" : {
            "operator" : "=",
            "operand" : [ {
              "column" : 3,
              "type" : "INTEGER"
            }, {
              "column" : 4,
              "type" : "INTEGER"
            } ],
            "type" : "BOOLEAN"
          },
          "left" : {
            "project" : {
              "target" : [ {
                "column" : 1,
                "type" : "VARCHAR"
              }, {
                "operator" : "TRIM",
                "operand" : [ {
                  "operator" : "BOTH",
                  "operand" : [ ],
                  "type" : "SYMBOL"
                }, {
                  "operator" : "_ISO-8859-1' '",
                  "operand" : [ ],
                  "type" : "CHAR"
                }, {
                  "column" : 2,
                  "type" : "VARCHAR"
                } ],
                "type" : "VARCHAR"
              }, {
                "operator" : "*",
                "operand" : [ {
                  "column" : 5,
                  "type" : "INTEGER"
                }, {
                  "operator" : "2",
                  "operand" : [ ],
                  "type" : "INTEGER"
                } ],
                "type" : "INTEGER"
              }, {
                "column" : 7,
                "type" : "INTEGER"
              } ],
              "source" : {
                "join" : {
                  "kind" : "SEMI",
                  "condition" : {
                    "operator" : "=",
                    "operand" : [ {
                      "column" : 7,
                      "type" : "INTEGER"
                    }, {
                      "column" : 9,
                      "type" : "INTEGER"
                    } ],
                    "type" : "BOOLEAN"
                  },
                  "left" : {
                    "scan" : 0
                  },
                  "right" : {
                    "scan" : 1
                  }
                }
              }
            }
          },
          "right" : {
            "scan" : 1
          }
        }
      }
    }
  } ],
  "help" : [ "LogicalProject(ENAME=[$0], EXPR$1=[$1], EXPR$2=[$2], DEPTNO=[$3])\r\n  LogicalFilter(condition=[=($3, $4)])\r\n    LogicalJoin(condition=[true], joinType=[inner])\r\n      LogicalProject(ENAME=[$1], EXPR$1=[TRIM(FLAG(BOTH), ' ', $2)], EXPR$2=[*($5, 2)], DEPTNO=[$7])\r\n        LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n      LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\r\n", "LogicalProject(ENAME=[$0], EXPR$1=[$1], EXPR$2=[$2], DEPTNO=[$3])\r\n  LogicalJoin(condition=[=($3, $4)], joinType=[inner], semiJoinDone=[true])\r\n    LogicalProject(ENAME=[$1], EXPR$1=[TRIM(FLAG(BOTH), ' ', $2)], EXPR$2=[*($5, 2)], DEPTNO=[$7])\r\n      LogicalJoin(condition=[=($7, $9)], joinType=[semi])\r\n        LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n        LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\r\n    LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\r\n" ]
}