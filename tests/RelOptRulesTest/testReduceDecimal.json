{
  "schemas" : [ {
    "types" : [ "INTEGER", "VARCHAR", "VARCHAR", "INTEGER", "TIMESTAMP", "INTEGER", "INTEGER", "INTEGER", "BOOLEAN" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "DEFAULT", "NOT_NULLABLE" ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ]
  } ],
  "queries" : [ {
    "project" : {
      "target" : [ {
        "column" : 1,
        "type" : "VARCHAR"
      } ],
      "source" : {
        "filter" : {
          "condition" : {
            "operator" : ">",
            "operand" : [ {
              "column" : 5,
              "type" : "INTEGER"
            }, {
              "operator" : "100.0",
              "operand" : [ ],
              "type" : "DECIMAL"
            } ],
            "type" : "BOOLEAN"
          },
          "source" : {
            "scan" : 0
          }
        }
      }
    }
  }, {
    "project" : {
      "target" : [ {
        "column" : 1,
        "type" : "VARCHAR"
      } ],
      "source" : {
        "error" : "Not implemented: LogicalCalc"
      }
    }
  } ],
  "help" : [ "LogicalProject(ENAME=[$1])\r\n  LogicalFilter(condition=[>($5, 100.0:DECIMAL(4, 1))])\r\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n", "LogicalProject(ENAME=[$1])\r\n  LogicalCalc(expr#0..8=[{inputs}], expr#9=[10:BIGINT], expr#10=[*($t5, $t9)], expr#11=[100.0:DECIMAL(4, 1)], expr#12=[Reinterpret($t11)], expr#13=[>($t10, $t12)], proj#0..8=[{exprs}], $condition=[$t13])\r\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n" ]
}