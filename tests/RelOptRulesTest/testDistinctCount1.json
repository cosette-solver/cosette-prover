{
  "schemas" : [ {
    "types" : [ "INTEGER", "VARCHAR", "VARCHAR", "INTEGER", "TIMESTAMP", "INTEGER", "INTEGER", "INTEGER", "BOOLEAN" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "DEFAULT", "NOT_NULLABLE" ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ]
  } ],
  "queries" : [ {
    "distinct" : {
      "correlate" : [ {
        "project" : {
          "target" : [ {
            "column" : 0,
            "type" : "INTEGER"
          } ],
          "source" : {
            "project" : {
              "target" : [ {
                "column" : 7,
                "type" : "INTEGER"
              }, {
                "column" : 1,
                "type" : "VARCHAR"
              } ],
              "source" : {
                "scan" : 0
              }
            }
          }
        }
      }, {
        "aggregate" : {
          "function" : [ {
            "operator" : "COUNT",
            "operand" : [ {
              "column" : 2,
              "type" : "VARCHAR"
            } ],
            "type" : "BIGINT"
          } ],
          "source" : {
            "filter" : {
              "condition" : {
                "operator" : "AND",
                "operand" : [ {
                  "operator" : "TRUE",
                  "operand" : [ ],
                  "type" : "BOOLEAN"
                }, {
                  "operator" : "=",
                  "operand" : [ {
                    "column" : 0,
                    "type" : "INTEGER"
                  }, {
                    "column" : 1,
                    "type" : "INTEGER"
                  } ],
                  "type" : "BOOLEAN"
                } ],
                "type" : "BOOLEAN"
              },
              "source" : {
                "project" : {
                  "target" : [ {
                    "column" : 8,
                    "type" : "INTEGER"
                  }, {
                    "column" : 2,
                    "type" : "VARCHAR"
                  } ],
                  "source" : {
                    "scan" : 0
                  }
                }
              }
            }
          }
        }
      } ]
    }
  }, {
    "distinct" : {
      "correlate" : [ {
        "project" : {
          "target" : [ {
            "column" : 1,
            "type" : "VARCHAR"
          } ],
          "source" : {
            "distinct" : {
              "correlate" : [ {
                "project" : {
                  "target" : [ {
                    "column" : 1,
                    "type" : "INTEGER"
                  }, {
                    "column" : 7,
                    "type" : "VARCHAR"
                  } ],
                  "source" : {
                    "scan" : 0
                  }
                }
              }, {
                "aggregate" : {
                  "function" : [ ],
                  "source" : {
                    "filter" : {
                      "condition" : {
                        "operator" : "AND",
                        "operand" : [ {
                          "operator" : "AND",
                          "operand" : [ {
                            "operator" : "TRUE",
                            "operand" : [ ],
                            "type" : "BOOLEAN"
                          }, {
                            "operator" : "=",
                            "operand" : [ {
                              "column" : 0,
                              "type" : "INTEGER"
                            }, {
                              "column" : 3,
                              "type" : "VARCHAR"
                            } ],
                            "type" : "BOOLEAN"
                          } ],
                          "type" : "BOOLEAN"
                        }, {
                          "operator" : "=",
                          "operand" : [ {
                            "column" : 1,
                            "type" : "VARCHAR"
                          }, {
                            "column" : 9,
                            "type" : "INTEGER"
                          } ],
                          "type" : "BOOLEAN"
                        } ],
                        "type" : "BOOLEAN"
                      },
                      "source" : {
                        "scan" : 0
                      }
                    }
                  }
                }
              } ]
            }
          }
        }
      }, {
        "aggregate" : {
          "function" : [ {
            "operator" : "COUNT",
            "operand" : [ {
              "column" : 1,
              "type" : "VARCHAR"
            } ],
            "type" : "BIGINT"
          } ],
          "source" : {
            "filter" : {
              "condition" : {
                "operator" : "AND",
                "operand" : [ {
                  "operator" : "TRUE",
                  "operand" : [ ],
                  "type" : "BOOLEAN"
                }, {
                  "operator" : "=",
                  "operand" : [ {
                    "column" : 0,
                    "type" : "VARCHAR"
                  }, {
                    "column" : 2,
                    "type" : "INTEGER"
                  } ],
                  "type" : "BOOLEAN"
                } ],
                "type" : "BOOLEAN"
              },
              "source" : {
                "distinct" : {
                  "correlate" : [ {
                    "project" : {
                      "target" : [ {
                        "column" : 2,
                        "type" : "INTEGER"
                      }, {
                        "column" : 8,
                        "type" : "VARCHAR"
                      } ],
                      "source" : {
                        "scan" : 0
                      }
                    }
                  }, {
                    "aggregate" : {
                      "function" : [ ],
                      "source" : {
                        "filter" : {
                          "condition" : {
                            "operator" : "AND",
                            "operand" : [ {
                              "operator" : "AND",
                              "operand" : [ {
                                "operator" : "TRUE",
                                "operand" : [ ],
                                "type" : "BOOLEAN"
                              }, {
                                "operator" : "=",
                                "operand" : [ {
                                  "column" : 1,
                                  "type" : "INTEGER"
                                }, {
                                  "column" : 4,
                                  "type" : "VARCHAR"
                                } ],
                                "type" : "BOOLEAN"
                              } ],
                              "type" : "BOOLEAN"
                            }, {
                              "operator" : "=",
                              "operand" : [ {
                                "column" : 2,
                                "type" : "VARCHAR"
                              }, {
                                "column" : 10,
                                "type" : "INTEGER"
                              } ],
                              "type" : "BOOLEAN"
                            } ],
                            "type" : "BOOLEAN"
                          },
                          "source" : {
                            "scan" : 0
                          }
                        }
                      }
                    }
                  } ]
                }
              }
            }
          }
        }
      } ]
    }
  } ],
  "help" : [ "LogicalAggregate(group=[{0}], EXPR$1=[COUNT(DISTINCT $1)])\r\n  LogicalProject(DEPTNO=[$7], ENAME=[$1])\r\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n", "LogicalAggregate(group=[{1}], EXPR$1=[COUNT($0)])\r\n  LogicalAggregate(group=[{1, 7}])\r\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n" ]
}