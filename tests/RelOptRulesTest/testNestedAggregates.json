{
  "schemas" : [ {
    "types" : [ "INTEGER", "VARCHAR", "VARCHAR", "INTEGER", "TIMESTAMP", "INTEGER", "INTEGER", "INTEGER", "BOOLEAN" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "DEFAULT", "NOT_NULLABLE" ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ]
  } ],
  "queries" : [ {
    "project" : {
      "target" : [ {
        "operator" : "CAST",
        "operand" : [ {
          "operator" : "/",
          "operand" : [ {
            "error" : "Not implemented: SUM"
          }, {
            "error" : "Not implemented: COUNT"
          } ],
          "type" : "BIGINT"
        } ],
        "type" : "INTEGER"
      } ],
      "source" : {
        "distinct" : {
          "correlate" : [ {
            "project" : {
              "target" : [ {
                "column" : 0,
                "type" : "INTEGER"
              } ],
              "source" : {
                "project" : {
                  "target" : [ {
                    "column" : 7,
                    "type" : "INTEGER"
                  }, {
                    "column" : 5,
                    "type" : "INTEGER"
                  }, {
                    "column" : 0,
                    "type" : "INTEGER"
                  } ],
                  "source" : {
                    "scan" : 0
                  }
                }
              }
            }
          }, {
            "aggregate" : {
              "function" : [ {
                "operator" : "SUM",
                "operand" : [ {
                  "column" : 2,
                  "type" : "INTEGER"
                } ],
                "type" : "INTEGER"
              }, {
                "operator" : "MIN",
                "operand" : [ {
                  "column" : 3,
                  "type" : "INTEGER"
                } ],
                "type" : "INTEGER"
              }, {
                "operator" : "AVG",
                "operand" : [ {
                  "column" : 3,
                  "type" : "INTEGER"
                } ],
                "type" : "INTEGER"
              } ],
              "source" : {
                "filter" : {
                  "condition" : {
                    "operator" : "AND",
                    "operand" : [ {
                      "operator" : "TRUE",
                      "operand" : [ ],
                      "type" : "BOOLEAN"
                    }, {
                      "operator" : "=",
                      "operand" : [ {
                        "column" : 0,
                        "type" : "INTEGER"
                      }, {
                        "column" : 1,
                        "type" : "INTEGER"
                      } ],
                      "type" : "BOOLEAN"
                    } ],
                    "type" : "BOOLEAN"
                  },
                  "source" : {
                    "project" : {
                      "target" : [ {
                        "column" : 8,
                        "type" : "INTEGER"
                      }, {
                        "column" : 6,
                        "type" : "INTEGER"
                      }, {
                        "column" : 1,
                        "type" : "INTEGER"
                      } ],
                      "source" : {
                        "scan" : 0
                      }
                    }
                  }
                }
              }
            }
          } ]
        }
      }
    }
  }, {
    "project" : {
      "target" : [ {
        "operator" : "CAST",
        "operand" : [ {
          "operator" : "/",
          "operand" : [ {
            "column" : 2,
            "type" : "INTEGER"
          }, {
            "column" : 3,
            "type" : "BIGINT"
          } ],
          "type" : "BIGINT"
        } ],
        "type" : "INTEGER"
      } ],
      "source" : {
        "error" : "Not implemented: LogicalWindow"
      }
    }
  } ],
  "help" : [ "LogicalProject(EXPR$0=[CAST(/(SUM(+(+($1, *(2, $2)), *(3, $3))) OVER (PARTITION BY $0), COUNT(+(+($1, *(2, $2)), *(3, $3))) OVER (PARTITION BY $0))):INTEGER NOT NULL])\r\n  LogicalAggregate(group=[{0}], agg#0=[SUM($1)], agg#1=[MIN($2)], agg#2=[AVG($2)])\r\n    LogicalProject(DEPTNO=[$7], SAL=[$5], EMPNO=[$0])\r\n      LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n", "LogicalProject(EXPR$0=[CAST(/($2, $3)):INTEGER NOT NULL])\r\n  LogicalWindow(window#0=[window(partition {0} aggs [SUM($1), COUNT($1)])])\r\n    LogicalProject(DEPTNO=[$0], $1=[+(+($1, *(2, $2)), *(3, $3))])\r\n      LogicalAggregate(group=[{0}], agg#0=[SUM($1)], agg#1=[MIN($2)], agg#2=[AVG($2)])\r\n        LogicalProject(DEPTNO=[$7], SAL=[$5], EMPNO=[$0])\r\n          LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n" ]
}